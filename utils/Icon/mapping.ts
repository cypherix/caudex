export const extensionsMap: Record<string, string> = {
    stl: "3d",
    obj: "3d",
    ac: "3d",
    blend: "3d",
    mesh: "3d",
    mqo: "3d",
    pmd: "3d",
    pmx: "3d",
    skp: "3d",
    vac: "3d",
    vdp: "3d",
    vox: "3d",
    abc: "abc",
    as: "actionscript",
    ada: "ada",
    adb: "ada",
    ads: "ada",
    ali: "ada",
    ch: "advpl_include",
    prx: "advpl_prw",
    ptm: "advpl_ptm",
    tlpp: "advpl_tlpp",
    ai: "ai",
    apk: "android",
    smali: "androd",
    dex: "android",
    "component.ts": "angular-component",
    "component.js": "angular-component",
    "directive.ts": "angular-directive",
    "directive.js": "angular-directive",
    "guard.ts": "angular-guard",
    "guard.js": "angular-guard",
    "pipe.ts": "angular-pipe",
    "pipe.js": "angular-pipe",
    "resolver.ts": "angular-resolver",
    "resolver.js": "angular-resolver",
    "service.ts": "angular-service",
    "service.js": "angular-service",
    apib: "apiblueprint",
    apiblueprint: "apiblueprint",
    applescript: "applescript",
    ipa: "applescript",
    gs: "apps-script",
    ino: "arduino",
    ad: "asciidoc",
    adoc: "asciidoc",
    asciidoc: "asciidoc",
    asm: "assembly",
    a51: "assembly",
    nasm: "assembly",
    s: "assembly",
    ms: "assembly",
    agc: "assembly",
    ags: "assembly",
    aea: "assembly",
    argus: "assembly",
    miligus: "assembly",
    binsource: "assembly",
    astro: "astro",
    mp3: "audio",
    ogg: "audio",
    wav: "audio",
    ahk: "autohotkey",
    au3: "autoit",
    azcli: "azure",
    "azure-pipelines.yml": "azure-pipelines",
    "azure-pipelines.yaml": "azure-pipelines",
    bal: "ballerina",
    balx: "ballerina",
    bzl: "bazel",
    bazel: "bazel",
    bicep: "bicep",
    "blade.php": "blade",
    "inky.php": "blade",
    blade: "blade",
    blink: "blink",
    b: "brainfuck",
    bf: "brainfuck",
    cmj: "bucklescript",
    gemfile: "bundler",
    "gemfile.lock": "bundler",
    c: "c",
    i: "c",
    mi: "c",
    cabal: "cabal",
    cake: "cake",
    crt: "certificate",
    cer: "certificate",
    cert: "certificate",
    pgn: "chess",
    fen: "chess",
    clj: "clojure",
    cljs: "clojure",
    cljc: "clojure",
    cmake: "cmake",
    coarc: "coala",
    coafile: "coala",
    cob: "cobol",
    cbl: "cobol",
    coco: "coconut",
    ".codeclimate.yml": "code-climate",
    coffee: "coffee",
    cson: "coffee",
    iced: "coffee",
    cfml: "coldfusion",
    cfc: "coldfusion",
    lucee: "coldfusion",
    cfm: "coldfusion",
    command: "command",
    cmd: "console",
    sh: "console",
    ksh: "console",
    csh: "console",
    tcsh: "console",
    zsh: "console",
    bash: "console",
    bat: "console",
    awk: "console",
    fish: "console",
    exp: "console",
    cpp: "cpp",
    cc: "cpp",
    cxx: "cpp",
    "c++": "cpp",
    cp: "cpp",
    mm: "cpp",
    mii: "cpp",
    ii: "cpp",
    cr: "crystal",
    ecr: "crystal",
    csx: "csharp",
    cs: "csharp",
    css: "css",
    "css.map": "cssmap",
    feature: "cucumber",
    cu: "cuda",
    cuh: "cuda",
    d: "d",
    dart: "dart",
    pdb: "database",
    sql: "database",
    pks: "database",
    pkb: "database",
    accdb: "database",
    mdb: "database",
    sqlite: "database",
    sqlite3: "database",
    pgsql: "database",
    postgres: "database",
    psql: "database",
    db: "database",
    db3: "database",
    dsc: "denizenscript",
    dhall: "dhall",
    dhallb: "dhall",
    bubble: "dinophp",
    "html.bubble": "dinophp",
    "php.bubble": "dinophp",
    iso: "disc",
    djt: "django",
    dockerignore: "docker",
    dockerfile: "docker",
    "docker-compose.yml": "docker",
    "docker-compose.yaml": "docker",
    "compose.yaml": "docker",
    "compose.yml": "docker",
    "txt": "document",
    def: "dotjs",
    dot: "dotjs",
    jst: "dotjs",
    drawio: "drawio",
    dio: "drawio",
    "drone.yml": "drone",
    edge: "edge",
    eex: "elixir",
    ejs: "ejs",
    ex: "elixir",
    exs: "elixir",
    leex: "elixir",
    heex: "elixir",
    elm: "elm",
    ics: "email",
    env: "env",
    erl: "erlang",
    exe: "exe",
    msi: "exe",
    ico: "favicon",
    fig: "figma",
    swf: "flash",
    woff2: "font",
    woff: "font",
    ttf: "font",
    otf: "font",
    "4th": "forth",
    fth: "forth",
    frt: "forth",
    f: "fortran",
    f77: "fortran",
    f90: "fortran",
    f95: "fortran",
    f08: "fortran",
    fxp: "foxpro",
    prg: "foxpro",
    fs: "fsharp",
    fsx: "fsharp",
    fsi: "fsharp",
    fsproj: "fsharp",
    gmi: "gemini",
    gemini: "gemini",
    patch: "git",
    go: "go",
    gd: "godot",
    godot: "godot-assets",
    tres: "godot-assets",
    tscn: "godot-assets",
    gradle: "gradle",
    gr: "grain",
    graphcool: "graphcool",
    graphql: "graphql",
    gql: "graphql",
    groovy: "groovy",
    h: "h",
    haml: "haml",
    hbs: "handlebars",
    mustache: "handlebars",
    hs: "haskell",
    hx: "haxe",
    hcl: "hcl",
    dat: "hex",
    bin: "hex",
    hex: "hex",
    hh: "hpp",
    hpp: "hpp",
    hxx: "hpp",
    "h++": "hpp",
    hp: "hpp",
    tcc: "hpp",
    inl: "hpp",
    html: "html",
    xhtml: "html",
    html_vm: "html",
    asp: "html",
    http: "http",
    rest: "http",
    pot: "i18n",
    po: "i18n",
    mo: "i18n",
    idr: "idris",
    ibc: "idris",
    png: "image",
    jpg: "image",
    jepg: "image",
    gif: "image",
    webp: "image",
    imba: "imba",
    jar: "jar",
    java: "java",
    jsp: "java",
    class: "javaclass",
    jenkins: "jenkins",
    jinja: "jinja",
    jinja2: "jinja",
    j2: "jinja",
    "jinja-html": "jinja",
    js: "js",
    cjs: "js",
    jsconfig: "jsconfig",
    esx: "js",
    mjs: "js",
    "js.map": "jsmap",
    json: "json",
    tsbuildinfo: "json",
    json5: "json",
    jsonl: "json",
    ndjson: "json",
    jl: "julia",
    ipynb: "jupyter",
    key: "key",
    pem: "key",
    pub: "key",
    asc: "key",
    gpg: "key",
    passwd: "key",
    kv: "kivy",
    kl: "kl",
    kt: "kotlin",
    kts: "kotlin",
    kql: "kusto",
    less: "less",
    lib: "lib",
    bib: "lib",
    ly: "lilypond",
    liquid: "liquid",
    lisp: "lisp",
    lsp: "lisp",
    cl: "lisp",
    fast: "lisp",
    ls: "livescript",
    ll: "llvm",
    bc: "llvm",
    log: "log",
    lock: "lock",
    lol: "lolcode",
    makefile: "makefile",
    md: "markdown",
    markdown: "markdown",
    rst: "markdown",
    marko: "markojs",
    nb: "mathematica",
    mex: "matlab",
    mexn: "matlab",
    mexrs6: "matlab",
    mn: "matlab",
    mum: "matlab",
    mx: "matlab",
    mx3: "matlab",
    rwd: "matlab",
    slx: "matlab",
    slddc: "matlab",
    smv: "matlab",
    xvc: "matlab",
    mdx: "mdx",
    svx: "mdsvex",
    merlin: "merlin",
    wrap: "meson",
    mcfunction: "minecraft",
    mcmeta: "minecraft",
    mcr: "minecraft",
    mca: "minecraft",
    mcgame: "minecraft",
    mclevel: "minecraft",
    mcworld: "minecraft",
    mine: "minecraft",
    mus: "minecraft",
    mint: "mint",
    mjml: "mjml",
    moon: "moonscript",
    mxml: "mxml",
    "ndst.yml": "ndst",
    "ndst.yaml": "ndst",
    "ndst.json": "ndst",
    nim: "nim",
    nimble: "nim",
    nix: "nix",
    njk: "nunjucks",
    nunjucks: "nunjucks",
    ml: "ocaml",
    mli: "ocaml",
    cmx: "ocaml",
    odin: "odin",
    rego: "opa",
    opam: "opam",
    vert: "opengl",
    frag: "opengl",
    tesc: "opengl",
    tese: "opengl",
    geom: "opengl",
    comp: "opengl",
    glsl: "opengl",
    hlsl: "opengl",
    pas: "pascal",
    pwn: "pawn",
    amx: "pawn",
    pdf: "pdf",
    pm: "perl",
    raku: "perl",
    psd: "photoshop",
    php: "php",
    pipeline: "pipeline",
    pcss: "postcssconfig",
    sss: "postcssconfig",
    pptx: "powerpoint",
    ppt: "powerpoint",
    pptm: "powerpoint",
    potx: "powerpoint",
    potm: "powerpoint",
    ppsx: "powerpoint",
    ppsm: "powerpoint",
    pps: "powerpoint",
    ppam: "powerpoint",
    ppa: "powerpoint",
    ps1: "powershell",
    psm1: "powershell",
    psd1: "powershell",
    ps1xml: "powershell",
    psc1: "powershell",
    pssc: "powershell",
    prisma: "prisma",
    pde: "processing",
    pro: "prolog",
    p: "prolog",
    pl: "prolog",
    proto: "proto",
    jade: "pug",
    pug: "pug",
    pp: "puppet",
    pure: "purescript",
    purs: "purescript",
    py: "python",
    pyc: "python-misc",
    whl: "python-misc",
    qs: "qsharp",
    r: "r",
    rmd: "r",
    rkt: "racket",
    raml: "raml",
    cshtml: "razor",
    vbhtml: "razor",
    tsx: "reactts",
    jsx: "react",
    re: "reason",
    rei: "reason",
    red: "red",
    res: "rescript",
    resi: "rescript",
    rql: "restql",
    restql: "restql",
    riot: "riot",
    tag: "riot",
    "routing.ts": "routing",
    "routing.tsx": "routing",
    "routing.js": "routing",
    "routing.jsx": "routing",
    "routes.ts": "routing",
    "routes.tsx": "routing",
    "routes.js": "routing",
    "routes.jsx": "routing",
    rb: "ruby",
    erb: "ruby",
    rake: "ruby",
    rs: "rust",
    san: "san",
    sas: "sas",
    sas7bdat: "sas",
    sashdat: "sas",
    astore: "sas",
    ast: "sas",
    sast: "sas",
    sass: "sass",
    scss: "sass",
    sbt: "sbt",
    scala: "scala",
    sc: "scala",
    ss: "scheme",
    scm: "scheme",
    "code-search": "search",
    ini: "settings",
    dlc: "settings",
    dll: "settings",
    config: "settings",
    conf: "settings",
    properties: "settings",
    prop: "settings",
    settings: "settings",
    option: "settings",
    props: "settings",
    toml: "settings",
    prefs: "settings",
    "sln.dotsettings": "settings",
    "sln.dotsettings.user": "settings",
    cfg: "settings",
    unity: "shaderlab",
    sy: "siyuan",
    sketch: "sketch",
    slim: "slim",
    tpl: "smarty",
    sml: "sml",
    mlton: "sml",
    mlb: "sml",
    sig: "sml",
    fun: "sml",
    cm: "sml",
    lex: "sml",
    use: "sml",
    grm: "sml",
    sol: "solidity",
    "steadybit.yml": "steadybit",
    "steadybit.yaml": "steadybit",
    "story.js": "storybook",
    "story.jsx": "storybook",
    "story.ts": "storybook",
    "story.tsx": "storybook",
    "story.mdx": "storybook",
    "stories.js": "storybook",
    "stories.jsx": "storybook",
    "stories.ts": "storybook",
    "stories.tsx": "storybook",
    "stories.mdx": "storybook",
    "stories.svelte": "storybook",
    styl: "stylus",
    "sublime-project": "sublime",
    "sublime-workspace": "sublime",
    svelte: "svelte",
    svg: "svg",
    swc: "swc",
    swift: "swift",
    xls: "table",
    xlsx: "table",
    csv: "table",
    tsv: "table",
    tauri: "tauri",
    tcl: "tcl",
    tl: "teal",
    template: "template",
    tf: "terraform",
    tfstate: "terraform",
    tfvars: "terraform",
    "tf.json": "terraform",
    "test.js": "testjs",
    "test.mjs": "testjs",
    "test.cjs": "testjs",
    "test.snap": "testjs",
    "e2e-spec.js": "testjs",
    "e2e-spec.cjs": "testjs",
    "spec.js": "testjs",
    "spec.mjs": "testjs",
    "spec.cjs": "testjs",
    "spec.tsx": "testjsx",
    "test.tsx": "testjsx",
    "tsx.snap": "testjsx",
    "spec.jsx": "testjsx",
    "test.jsx": "testjsx",
    "jsx.snap": "testjsx",
    "spec.ts": "testts",
    "e2e-spec.ts": "testts",
    "test.ts": "testts",
    "ts.snap": "testts",
    texi: "tex",
    sty: "tex",
    dtx: "tex",
    ltx: "tex",
    tobi: "tobi",
    todo: "todo",
    ".travis.yml": "travis",
    "tsconfig.json": "tsconfig",
    twig: "twig",
    tw: "twine",
    twee: "twine",
    "d.ts": "typescriptdef",
    ts: "typescript",
    iuml: "uml",
    pu: "uml",
    puml: "uml",
    plantuml: "uml",
    wsd: "uml",
    url: "url",
    vagrantfile: "vagrant",
    vala: "vala",
    vm: "velocity",
    fhtml: "velocity",
    vtl: "velocity",
    vhd: "verilog",
    sv: "verilog",
    svh: "verilog",
    vfl: "vfl",
    mp4: "video",
    mov: "video",
    vim: "vim",
    vimrc: "vim",
    gvimrc: "vim",
    exrc: "vim",
    viminfo: "vim",
    vdi: "virtual",
    vbox: "virtual",
    "vbox-prev": "virtual",
    csproj: "visualstudio",
    ruleset: "visualstudio",
    sln: "visualstudio",
    suo: "visualstudio",
    vb: "visualstudio",
    vbs: "visualstudio",
    vcxitems: "visualstudio",
    "vcxitems.filters": "visualstudio",
    vcxproj: "visualstudio",
    "vcxproj.filters": "visualstudio",
    v: "vlang",
    vsix: "vscode",
    vsixmanifest: "vscode",
    vscodeignore: "vscode",
    "code-workplace": "vscode",
    vue: "vue",
    ".wakatime-project": "wakatime",
    wasm: "webassembly",
    wat: "webassembly",
    wl: "wolframlanguage",
    wls: "wolframlanguage",
    doc: "word",
    docx: "word",
    rtf: "word",
    xaml: "xaml",
    xml: "xml",
    plist: "xml",
    xsd: "xml",
    dtd: "xml",
    xsl: "xml",
    xslt: "xml",
    resx: "xml",
    iml: "xml",
    xquery: "xml",
    tmLanguage: "xml",
    manifest: "xml",
    project: "xml",
    "xml.dist": "xml",
    "xml.dist.sample": "xml",
    dmn: "xml",
    yaml: "yaml",
    yml: "yaml",
    "yml.dist": "yaml",
    "yaml.dist": "yaml",
    "YAML-tmLanguage": "yaml",
    yang: "yang",
    zig: "zig",
    zip: "zip",
    rar: "zip",
    "7z": "zip",
    tar: "zip",
    gz: "zip",
    bzip2: "zip",
    xz: "zip",
    bz2: "zip",
    zipx: "zip",
    tgz: "zip",
    lua: "lua",
};

export const fileNameMap: Record<string, string> = {
    ace: "adonis",
    ".adonisrc.json": "adonis",
    "androidmanifest.xml": "android",
    ".angular-cli.json": "angular",
    "angular-cli.json": "angular",
    "angular.json": "angular",
    "ansible.cfg": "ansible",
    inventory: "ansible",
    "ansible-navigator.yml": "ansible",
    "ansible-navigator.yaml": "ansible",
    "ansible-navigator.json": "ansible",
    "execution_environment.yml": "ansible",
    "execution_environment.yaml": "ansible",
    "playbook.yml": "ansible",
    "playbook.yaml": "ansible",
    "main.yml": "ansible",
    "main.yaml": "ansible",
    "apollo.config.js": "apollo",
    "appveyor.yml": "appveyor",
    ".appveyor.yml": "appveyor",
    "astro.config.js": "astro",
    "astro.config.mjs": "astro",
    "astro.config.cjs": "astro",
    "astro.config.ts": "astro",
    ".astylerc": "astyle",
    "aurelia.json": "aurelia",
    authors: "authors",
    "authors.md": "authors",
    "authors.txt": "authors",
    "authors.rst": "authors",
    "contributors.md": "authors",
    "contributors.rst": "authors",
    "contributors.txt": "authors",
    contributors: "authors",
    ".autorc": "auto",
    "auto.config.js": "auto",
    "auto.config.ts": "auto",
    "auto-config.json": "auto",
    "auto-config.yaml": "auto",
    "auto-config.yml": "auto",
    "auto-config.ts": "auto",
    "auto-config.js": "auto",
    "azure-pipelines.yml": "azure-pipelines",
    "azure-pipelines.yaml": "azure-pipelines",
    ".babelrc": "babel",
    ".babelrc.cjs": "babel",
    ".babelrc.js": "babel",
    ".babelrc.mjs": "babel",
    ".babelrc.json": "babel",
    "babel.config.cjs": "babel",
    "babel.config.js": "babel",
    "babel.config.mjs": "babel",
    "babel.config.json": "babel",
    "babel-transform.js": "babel",
    ".babel-plugin-macrosrc": "babel",
    ".babel-plugin-macrosrc.json": "babel",
    ".babel-plugin-macrosrc.yaml": "babel",
    ".babel-plugin-macrosrc.yml": "babel",
    ".babel-plugin-macrosrc.js": "babel",
    "babel-plugin-macros.config.js": "babel",
    ".bazelignore": "bazel",
    ".bazelrc": "bazel",
    ".bazelversion": "bazel",
    "bitbucket-pipelines.yaml": "bitbucket",
    "bitbucket-pipelines.yml": "bitbucket",
    "bun.lockb": "bun",
    ".bithoundrc": "bithound",
    artisan: "blade",
    "blitz.config.js": "blitz",
    "blitz.config.ts": "blitz",
    ".blitz.config.compiled.js": "blitz",
    ".bowerrc": "bower",
    "bower.json": "bower",
    ".browserslistrc": "browserslist",
    browserslist: "browserslist",
    ".buckconfig": "buck",
    "buildkite.yml": "buildkite",
    "buildkite.yaml": "buildkite",
    "cabal.project": "cabal",
    "cabal.project.freeze": "cabal",
    "cabal.project.local": "cabal",
    "capacitor.config.json": "capacitor",
    "capacitor.config.ts": "capacitor",
    "config.ru": "ruby",
    copying: "certificate",
    "copying.md": "certificate",
    "copying.rst": "certificate",
    "copying.txt": "certificate",
    copyright: "certificate",
    "copyright.md": "certificate",
    "copyright.rst": "certificate",
    "copyright.txt": "certificate",
    license: "certificate",
    "license-agpl": "certificate",
    "license-apache": "certificate",
    "license-bsd": "certificate",
    "license-mit": "certificate",
    "license-gpl": "certificate",
    "license-lgpl": "certificate",
    "license.md": "certificate",
    "license.rst": "certificate",
    "license.txt": "certificate",
    licence: "certificate",
    "licence-agpl": "certificate",
    "licence-apache": "certificate",
    "licence-bsd": "certificate",
    "licence-mit": "certificate",
    "licence-gpl": "certificate",
    "licence-lgpl": "certificate",
    "licence.md": "certificate",
    "licence.rst": "certificate",
    "licence.txt": "certificate",
    changelog: "changelog",
    "changelog.md": "changelog",
    "changelog.txt": "changelog",
    "changelog.rst": "changelog",
    changes: "changelog",
    "changes.md": "changelog",
    "changes.txt": "changelog",
    "changes.rst": "changelog",
    "circle.yml": "circleci",
    ".cfignore": "cloudfoundry",
    "cmakelists.txt": "cmake",
    "cmakecache.txt": "cmake",
    ".codeclimate.yml": "code-climate",
    "codecov.yml": "codecov",
    ".codecov.yml": "codecov",
    codeowners: "codeowners",
    ".commitlintrc": "commitlint",
    ".commitlintrc.js": "commitlint",
    "commitlint.config.js": "commitlint",
    ".commitlintrc.json": "commitlint",
    ".commitlint.yaml": "commitlint",
    ".commitlint.yml": "commitlint",
    ".commitlintrc.yaml": "commitlint",
    ".commitlintrc.yml": "commitlint",
    "commitlint.config.cjs": "commitlint",
    "commitlint.config.ts": "commitlint",
    ".commitlintrc.ts": "commitlint",
    ".commitlintrc.cjs": "commitlint",
    ".compodocrc": "compodoc",
    ".compodocrc.json": "compodoc",
    ".compodocrc.yaml": "compodoc",
    ".compodocrc.yml": "compodoc",
    "code_of_conduct.md": "conduct",
    "code_of_conduct.txt": "conduct",
    "contributing.md": "contributing",
    "contributing.rst": "contributing",
    "contributing.txt": "contributing",
    contributing: "contributing",
    "cypress.json": "cypress",
    "cypress.env.json": "cypress",
    "dependabot.yml": "dependabot",
    "deno.json": "deno",
    "deno.jsonc": "deno",
    "docker-compose.yml": "docker",
    "docker-compose.ci-build.yml": "docker",
    "docker-compose.override.yml": "docker",
    "docker-compose.vs.debug.yml": "docker",
    "docker-compose.vs.release.yml": "docker",
    "docker-compose.debug.yml": "dockerdebug",
    "docker-cloud.yml": "docker",
    ".dockerignore": "docker",
    dockerfile: "docker",
    "dockerfile.prod": "docker",
    "dockerfile.production": "docker",
    "dockerfile.alpha": "docker",
    "dockerfile.beta": "docker",
    "dockerfile.stage": "docker",
    "dockerfile.staging": "docker",
    "dockerfile.dev": "docker",
    "dockerfile.development": "docker",
    "dockerfile.local": "docker",
    "dockerfile.test": "docker",
    "dockerfile.testing": "docker",
    "dockerfile.ci": "docker",
    "dockerfile.web": "docker",
    "dockerfile.worker": "docker",
    "docker-compose.prod.yml": "docker",
    "docker-compose.production.yml": "docker",
    "docker-compose.alpha.yml": "docker",
    "docker-compose.beta.yml": "docker",
    "docker-compose.stage.yml": "docker",
    "docker-compose.staging.yml": "docker",
    "docker-compose.dev.yml": "docker",
    "docker-compose.development.yml": "docker",
    "docker-compose.local.yml": "docker",
    "docker-compose.test.yml": "docker",
    "docker-compose.testing.yml": "docker",
    "docker-compose.ci.yml": "docker",
    "docker-compose.web.yml": "docker",
    "docker-compose.worker.yml": "docker",
    "docker-compose.yaml": "docker",
    "docker-compose.override.yaml": "docker",
    "docker-compose.prod.yaml": "docker",
    "docker-compose.production.yaml": "docker",
    "docker-compose.alpha.yaml": "docker",
    "docker-compose.beta.yaml": "docker",
    "docker-compose.stage.yaml": "docker",
    "docker-compose.staging.yaml": "docker",
    "docker-compose.dev.yaml": "docker",
    "docker-compose.development.yaml": "docker",
    "docker-compose.local.yaml": "docker",
    "docker-compose.test.yaml": "docker",
    "docker-compose.testing.yaml": "docker",
    "docker-compose.ci.yaml": "docker",
    "docker-compose.web.yaml": "docker",
    "docker-compose.worker.yaml": "docker",
    "compose.prod.yml": "docker",
    "compose.production.yml": "docker",
    "compose.alpha.yml": "docker",
    "compose.beta.yml": "docker",
    "compose.stage.yml": "docker",
    "compose.staging.yml": "docker",
    "compose.dev.yml": "docker",
    "compose.development.yml": "docker",
    "compose.local.yml": "docker",
    "compose.test.yml": "docker",
    "compose.testing.yml": "docker",
    "compose.ci.yml": "docker",
    "compose.web.yml": "docker",
    "compose.worker.yml": "docker",
    "compose.yaml": "docker",
    "compose.override.yaml": "docker",
    "compose.prod.yaml": "docker",
    "compose.production.yaml": "docker",
    "compose.alpha.yaml": "docker",
    "compose.beta.yaml": "docker",
    "compose.stage.yaml": "docker",
    "compose.staging.yaml": "docker",
    "compose.dev.yaml": "docker",
    "compose.development.yaml": "docker",
    "compose.local.yaml": "docker",
    "compose.test.yaml": "docker",
    "compose.testing.yaml": "docker",
    "compose.ci.yaml": "docker",
    "compose.web.yaml": "docker",
    "compose.worker.yaml": "docker",
    ".drone.yml": "drone",
    dune: "dune",
    "dune-project": "dune",
    "dune-workspace": "dune",
    "dune-workspace.dev": "dune",
    ".editorconfig": "editorconfig",
    ".mailmap": "email",
    ".ember-cli": "ember",
    ".ember-cli.js": "ember",
    "ember-cli-builds.js": "ember",
    ".env.example": "env",
    ".env.staging": "env",
    ".env.preprod": "env",
    ".env.production": "env",
    ".env.defaults": "env",
    ".env.sample": "env",
    ".env.template": "env",
    ".env.schema": "env",
    ".env.local": "env",
    ".env.dev": "env",
    ".env.development": "env",
    ".env.qa": "env",
    ".env.dist": "env",
    ".env.prod": "env",
    ".env.stage": "env",
    ".env.preview": "env",
    ".env.test": "env",
    ".env.testing": "env",
    ".env.development.local": "env",
    ".env.qa.local": "env",
    ".env.production.local": "env",
    ".env.staging.local": "env",
    ".env.test.local": "env",
    ".eslintrc": "eslint",
    ".eslintignore": "eslint",
    ".eslintcache": "eslint",
    ".eslintrc.js": "eslint",
    ".eslintrc.mjs": "eslint",
    ".eslintrc.cjs": "eslint",
    ".eslintrc.json": "eslint",
    ".eslintrc.yaml": "eslint",
    ".eslintrc.yml": "eslint",
    fastfile: "fastlane",
    appfile: "fastlane",
    "firebase.json": "firebase",
    ".firebaserc": "firebase",
    "firestore.rules": "firebase",
    "firestore.indexes.json": "firebase",
    ".flowconfig": "flow",
    "fuse.js": "fusebox",
    "gatsby.config.js": "gatsby",
    "gatsby-config.js": "gatsby",
    "gatsby-node.js": "gatsby",
    "gatsby-browser.js": "gatsby",
    "gatsby-ssr.js": "gatsby",
    ".gcloudignore": "gcp",
    gemfile: "gemfile",
    ".gitattributes": "git",
    ".gitconfig": "git",
    ".gitignore": "git",
    ".gitmodules": "git",
    ".gitkeep": "git",
    ".gitpod.yml": "gitpod",
    "go.sum": "go-mod",
    "go.mod": "go-mod",
    "go.work": "go-mod",
    "gradle.properties": "gradle",
    "gradle-wrapper.properties": "gradle",
    "project.graphcool": "graphcool",
    ".graphqlconfig": "gradle",
    ".graphqlrc": "gradle",
    ".graphqlrc.json": "gradle",
    ".graphqlrc.js": "gradle",
    ".graphqlrc.ts": "gradle",
    ".graphqlrc.toml": "gradle",
    ".graphqlrc.yaml": "gradle",
    ".graphqlrc.yml": "gradle",
    "graphql.config.json": "gradle",
    "graphql.config.js": "gradle",
    "graphql.config.ts": "gradle",
    "graphql.config.toml": "gradle",
    "graphql.config.yaml": "gradle",
    "graphql.config.yml": "gradle",
    "gridsome.config.js": "gridsome",
    "gridsome.server.js": "gridsome",
    "gruntfile.js": "grunt",
    "gruntfile.coffee": "grunt",
    "gruntfile.ts": "grunt",
    "gruntfile.babel.js": "grunt",
    "gruntfile.babel.coffee": "grunt",
    "gruntfile.babel.ts": "grunt",
    "gulpfile.js": "gulp",
    "gulpfile.mjs": "gulp",
    "gulpfile.ts": "gulp",
    "gulpfile.babel.js": "gulp",
    ".hhconfig": "hack",
    ".helmignore": "helm",
    procfile: "heroku",
    "procfile.windows": "heroku",
    "horusec-config.json": "horusec",
    ".huskyrc": "husky",
    "husky.config.js": "husky",
    ".huskyrc.js": "husky",
    ".huskyrc.json": "husky",
    ".huskyrc.yaml": "husky",
    ".huskyrc.yml": "husky",
    ".hygen.js": "hygen",
    "ionic.config.json": "ionic",
    ".io-config.json": "ionic",
    ".nycrc": "istanbul",
    ".nycrc.json": "istanbul",
    jenkinsfile: "jenkins",
    "jest.config.js": "jest",
    "jest.config.ts": "jest",
    "jest.config.cjs": "jest",
    "jest.config.mjs": "jest",
    "jest.config.json": "jest",
    "jest.e2e.config.js": "jest",
    "jest.e2e.config.ts": "jest",
    "jest.e2e.config.cjs": "jest",
    "jest.e2e.config.mjs": "jest",
    "jest.e2e.config.json": "jest",
    "jest.e2e.json": "jest",
    "jest-unit.config.js": "jest",
    "jest-e2e.config.js": "jest",
    "jest-e2e.config.ts": "jest",
    "jest-e2e.config.cjs": "jest",
    "jest-e2e.config.mjs": "jest",
    "jest-e2e.config.json": "jest",
    "jest-e2e.json": "jest",
    "jest-github-actions-reporter.js": "jest",
    "jest.setup.js": "jest",
    "jest.setup.ts": "jest",
    "jest.json": "jest",
    ".jestrc": "jest",
    ".jestrc.js": "jest",
    ".jestrc.json": "jest",
    "jest.teardown.js": "jest",
    "jsconfig.json": "jsconfig",
    ".jscsrc": "json",
    ".jshintrc": "json",
    "composer.lock": "json",
    ".jsbeautifyrc": "json",
    ".esformatter": "json",
    "cdp.pid": "json",
    ".lintstagedrc": "json",
    "karma.conf.js": "karma",
    "karma.conf.ts": "karma",
    "karma.conf.coffee": "karma",
    "karma.config.js": "karma",
    "karma.config.ts": "karma",
    "karma-main.js": "karma",
    "karma-main.ts": "karma",
    ".htpasswd": "key",
    ".kl": "kl",
    "lerna.json": "lerna",
    ".lighthouserc.js": "lighthouse",
    "lighthouserc.js": "lighthouse",
    ".lighthouserc.json": "lighthouse",
    "lighthouserc.json": "lighthouse",
    ".lighthouserc.yaml": "lighthouse",
    "lighthouserc.yaml": "lighthouse",
    ".lighthouserc.yml": "lighthouse",
    "lighthouserc.yml": "lighthouse",
    "security.md": "lock",
    "security.txt": "lock",
    security: "lock",
    makefile: "makefile",
    gnumakefile: "makefile",
    kbuild: "makefile",
    "maven.config": "maven",
    "pom.xml": "maven",
    "jvm.config": "maven",
    "meson.build": "meson",
    "meson_options.txt": "meson",
    ".mjmlconfig": "mjml",
    "mocha.opts": "mocha",
    ".mocharc.yml": "mocha",
    ".mocharc.yaml": "mocha",
    ".mocharc.js": "mocha",
    ".mocharc.json": "mocha",
    ".mocharc.jsonc": "mocha",
    modernizrrc: "modernizr",
    ".modernizr.js": "modernizr",
    ".modernizrrc.json": "modernizr",
    "moon.yml": "moon",
    "template.yml": "moon",
    ".nest-cli.json": "nestjs",
    "nest-cli.json": "nestjs",
    "nestconfig.json": "nestjs",
    ".nestconfig.json": "nestjs",
    "netlify.json": "netlify",
    "netlify.yml": "netlify",
    "netlify.yaml": "netlify",
    "netlify.toml": "netlify",
    "next.config.js": "next",
    "next.config.ts": "next",
    "next.config.mjs": "next",
    "nginx.conf": "nginx",
    "package.json": "nodejs",
    "package-lock.json": "nodejs",
    ".nvmrc": "nodejs",
    ".esmrc": "nodejs",
    ".node-version": "nodejs",
    "nodemon-debug.json": "nodemon",
    "nodemon.json": "nodemon",
    ".npmignore": "npm",
    ".npmrc": "npm",
    "nx.json": "nrwl",
    ".nxignore": "nrwl",
    "nuget.config": "nuget",
    ".nuspec": "nuget",
    "nuget.exe": "nuget",
    "nuxt.config.js": "nuxt",
    "nuxt.config.ts": "nuxt",
    ".percy.yml": "percy",
    ".php_cs": "php-cs-fixer",
    ".php_cs.dist": "php-cs-fixer",
    ".php_cs.php": "php-cs-fixer",
    ".php_cs.dist.php": "php-cs-fixer",
    ".php-cs-fixer.php": "php-cs-fixer",
    ".php-cs-fixer.dist.php": "php-cs-fixer",
    "phpunit.xml": "phpunit",
    "phpunit.xml.dist": "phpunit",
    ".phpunit.result.cache": "phpunit",
    ".phpunit-watcher.yml": "phpunit",
    "phpunit-watcher.yml": "phpunit",
    "phpunit-watcher.yml.dist": "phpunit",
    ".htaccess": "xml",
    "playwright.config.js": "playwright",
    "playwright.config.ts": "playwright",
    ".pnpmfile.cjs": "pnpm",
    "pnpm-lock.yaml": "pnpm",
    "pnpm-workspace.yaml": "pnpm",
    "postcss.config.js": "postcssconfig",
    "postcss.config.cjs": "postcssconfig",
    ".postcssrc.js": "postcssconfig",
    ".postcssrc": "postcssconfig",
    ".postcssrc.json": "postcssconfig",
    ".postcssrc.yml": "postcssconfig",
    "posthtml.config.js": "posthtml",
    ".posthtmlrc.js": "posthtml",
    ".posthtmlrc": "posthtml",
    ".posthtmlrc.json": "posthtml",
    ".posthtmlrc.yml": "posthtml",
    ".prettierrc": "prettier",
    ".prettierignore": "prettier",
    "prettier.config.js": "prettier",
    "prettier.config.cjs": "prettier",
    "prettier.config.ts": "prettier",
    "prettier.config.coffee": "prettier",
    ".prettierrc.js": "prettier",
    ".prettierrc.cjs": "prettier",
    ".prettierrc.json": "prettier",
    ".prettierrc.yml": "prettier",
    ".prettierrc.yaml": "prettier",
    ".prettierrc.toml": "prettier",
    "prisma.yml": "prisma",
    "protractor.config.js": "protractor",
    "protractor.config.ts": "protractor",
    "protractor.config.coffee": "protractor",
    "protractor.conf.js": "protractor",
    "protractor.conf.ts": "protractor",
    ".pug-lintrc": "pug",
    ".pug-lintrc.js": "pug",
    ".pug-lintrc.json": "pug",
    "requirements.txt": "python-misc",
    pipfile: "python-misc",
    ".python-version": "python-misc",
    "manifest.in": "python-misc",
    pylintrc: "python-misc",
    ".pylintrc": "python-misc",
    "quasar.conf.js": "quasar",
    "readme.md": "readme",
    "readme.txt": "readme",
    readme: "readme",
    ".s2iignore": "redhat",
    "remix.config.js": "remix",
    "remix.config.ts": "remix",
    ".renovaterc": "renovate",
    ".renovaterc.json": "renovate",
    ".renovaterc-config.json": "renovate",
    "renovate.json": "renovate",
    "renovate.json5": "renovate",
    ".replit": "replit",
    "roadmap.md": "roadmap",
    "roadmap.txt": "roadmap",
    "timeline.md": "roadmap",
    "timeline.txt": "roadmap",
    "milestones.md": "roadmap",
    "milestones.txt": "roadmap",
    Rakefile: "ruby",
    "robots.txt": "robots",
    "rollup.config.js": "rollup",
    "rollup.config.ts": "rollup",
    "rollup-config.js": "rollup",
    "rollup-config.ts": "rollup",
    "rollup.config.common.js": "rollup",
    "rollup.config.common.ts": "rollup",
    "rollup.config.base.js": "rollup",
    "rollup.config.base.ts": "rollup",
    "rollup.config.prod.js": "rollup",
    "rollup.config.prod.ts": "rollup",
    "rollup.config.dev.js": "rollup",
    "rollup.config.dev.ts": "rollup",
    "rollup.config.prod.vendor.js": "rollup",
    "rollup.config.prod.vendor.ts": "rollup",
    "rome.json": "rome",
    "routing.ts": "routing",
    "routing.tsx": "routing",
    "routing.js": "routing",
    "routing.jsx": "routing",
    "routes.ts": "routing",
    "routes.tsx": "routing",
    "routes.js": "routing",
    "routes.jsx": "routing",
    ".rubocop.yml": "rubocop",
    ".rubocop-todo.yml": "rubocop",
    ".rubocop_todo.yml": "rubocop",
    ".releaserc": "semantic-release",
    ".releaserc.yaml": "semantic-release",
    ".releaserc.yml": "semantic-release",
    ".releaserc.json": "semantic-release",
    ".releaserc.js": "semantic-release",
    "release.config.js": "semantic-release",
    ".sentryclirc": "sentry",
    ".sequelizerc": "sequelize",
    "serverless.yml": "serverless",
    ".jshintignore": "settings",
    ".buildignore": "settings",
    ".mrconfig": "settings",
    ".yardopts": "settings",
    "manifest.mf": "settings",
    ".clang-format": "settings",
    ".clang-tidy": "settings",
    ".slugignore": "slug",
    "snowpack.config.cjs": "snowpack",
    "snowpack.config.js": "snowpack",
    "snowpack.config.mjs": "snowpack",
    "snowpack.deps.json": "snowpack",
    "snowpack.config.ts": "snowpack",
    "snowpack.config.json": "snowpack",
    ".snyk": "snyk",
    ".steadybit.yml": "steadybit",
    "steadybit.yml": "steadybit",
    ".steadybit.yaml": "steadybit",
    "steadybit.yaml": "steadybit",
    "stencil.config.js": "stencil",
    "stencil.config.ts": "stencil",
    "stitches.config.js": "stitches",
    "stitches.config.ts": "stitches",
    "stryker.conf.js": "stryker",
    "stryker.conf.json": "stryker",
    ".stylelintrc": "stylelint",
    "stylelint.config.js": "stylelint",
    "stylelint.config.cjs": "stylelint",
    ".stylelintrc.json": "stylelint",
    ".stylelintrc.yaml": "stylelint",
    ".stylelintrc.yml": "stylelint",
    ".stylelintrc.js": "stylelint",
    ".stylelintrc.cjs": "stylelint",
    ".stylelintignore": "stylelint",
    "svelte.config.js": "svelte",
    "svelte.config.cjs": "svelte",
    "svgo.config.js": "svgo",
    ".svgrrc": "svgr",
    "svgr.config.js": "svgr",
    ".svgrrc.js": "svgr",
    ".svgrrc.yaml": "svgr",
    ".svgrrc.yml": "svgr",
    ".svgrrc.json": "svgr",
    "tailwind.js": "tailwind",
    "tailwind.ts": "tailwind",
    "tailwind.config.js": "tailwind",
    "tailwind.config.ts": "tailwind",
    "tailwind.config.cjs": "tailwind",
    "tauri.config.json": "tauri",
    "tauri.linux.conf.json": "tauri",
    "tauri.windows.conf.json": "tauri",
    "tauri.macos.conf.json": "tauri",
    ".textlintrc": "textlint",
    ".tobimake": "tobimake",
    ".travis.yml": "travis",
    "tsconfig.json": "tsconfig",
    "tsconfig.app.json": "tsconfig",
    "tsconfig.editor.json": "tsconfig",
    "tsconfig.spec.json": "tsconfig",
    "tsconfig.base.json": "tsconfig",
    "tsconfig.build.json": "tsconfig",
    "tsconfig.eslint.json": "tsconfig",
    "tsconfig.lib.json": "tsconfig",
    "turbo.json": "turborepo",
    vagrantfile: "vagrant",
    "now.json": "vercel",
    ".nowignore": "vercel",
    "vercel.json": "vercel",
    ".vercelignore": "vercel",
    "vite.config.js": "vite",
    "vite.config.mjs": "vite",
    "vite.config.cjs": "vite",
    "vite.config.ts": "vite",
    "vitest.config.js": "vitest",
    "vitest.config.mjs": "vitest",
    "vitest.config.ts": "vitest",
    vscodeignore: "vscode",
    vsixmanifest: "vscode",
    vsix: "vscode",
    csproj: "visualstudio",
    ruleset: "visualstudio",
    sln: "visualstudio",
    suo: "visualstudio",
    vb: "visualstudio",
    vbs: "visualstudio",
    vcxitems: "visualstudio",
    "vcxitems.filters": "visualstudio",
    vcxproj: "visualstudio",
    "vcxproj.filters": "visualstudio",
    "code-workplace": "vscode",
    "vue.config.js": "vue-config",
    "vue.config.ts": "vue-config",
    "vetur.config.js": "vue-config",
    "vetur.config.ts": "vue-config",
    ".wakatime-project": "wakatime",
    "wallaby.js": "wallaby",
    "wallaby.conf.js": "wallaby",
    ".watchmanconfig": "watchmanconfig",
    ".hintrc": "webhint",
    "windi.config.js": "windicss",
    "windi.config.ts": "windicss",
    "windi.config.cjs": "windicss",
    "windi.config.json": "windicss",
    ".yarnrc": "yarn",
    "yarn.lock": "yarn",
    ".yarnclean": "yarn",
    ".yarn-integrity": "yarn",
    "yarn-error.log": "yarn",
    ".yarnrc.yml": "yarn",
    ".yarnrc.yaml": "yarn",
    ".puppeteerrc.cjs": "puppeteer",
    ".puppeteerrc.js": "puppeteer",
    ".puppeteerrc": "puppeteer",
    ".puppeteerrc.json": "puppeteer",
    ".puppeteerrc.yaml": "puppeteer",
    "puppeteer.config.js": "puppeteer",
    "puppeteer.config.cjs": "puppeteer",
};